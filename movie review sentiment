{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMTD9HTLofAGbvuwox1tGkJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import nltk\n","from nltk.tokenize import word_tokenize\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.model_selection import train_test_split"],"metadata":{"id":"552ffanfnKWx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load dataset\n","df = pd.read_csv('IMDB Dataset.csv')"],"metadata":{"id":"CXhf3iwonfMC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Preprocess text data\n","nltk.download('punkt')\n","nltk.download('stopwords')\n","stop_words = set(nltk.corpus.stopwords.words('english'))\n","def preprocess_text(text):\n","    tokens = word_tokenize(text.lower())\n","    tokens = [t for t in tokens if t not in stop_words]\n","    return ' '.join(tokens)\n","df['review'] = df['review'].apply(preprocess_text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ipOfjyrKnidQ","executionInfo":{"status":"ok","timestamp":1722513154403,"user_tz":-330,"elapsed":108113,"user":{"displayName":"Soan Diaz","userId":"14385863594581312452"}},"outputId":"0b5d77c8-d1d2-4b99-fe03-cb6a7bb22571"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]}]},{"cell_type":"code","source":["# Split dataset into training and testing sets\n","train_text, test_text, train_labels, test_labels = train_test_split(df['review'], df['sentiment'], test_size=0.2, random_state=42)"],"metadata":{"id":"T9Ds7V_hnk8R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create TF-IDF vectorizer\n","vectorizer = TfidfVectorizer(stop_words='english')"],"metadata":{"id":"arFIsgWin3li"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fit and transform training data\n","X_train = vectorizer.fit_transform(train_text)\n","y_train = train_labels"],"metadata":{"id":"17-7_Ycwn3Z3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Train Naive Bayes model\n","nb_model = MultinomialNB()\n","nb_model.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"N5mfLDl6oARh","executionInfo":{"status":"ok","timestamp":1722513665493,"user_tz":-330,"elapsed":832,"user":{"displayName":"Soan Diaz","userId":"14385863594581312452"}},"outputId":"ed040495-6263-45e5-9ac5-d7b908f0abc2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultinomialNB()"],"text/html":["<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["\n","X_test = vectorizer.transform(test_text)\n","y_pred = nb_model.predict(X_test)"],"metadata":{"id":"haKVSJEYoFd4"},"execution_count":null,"outputs":[]},{"source":["y_test = test_labels\n","\n","\n","from sklearn.metrics import accuracy_score\n","accuracy = accuracy_score(y_test, y_pred)\n","print('Accuracy:', accuracy)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z_jzV-YnzeOs","executionInfo":{"status":"ok","timestamp":1722513670252,"user_tz":-330,"elapsed":5,"user":{"displayName":"Soan Diaz","userId":"14385863594581312452"}},"outputId":"4c0a4a11-0ad3-4d16-9e91-dce4d8fc3f1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8641\n"]}]},{"cell_type":"code","source":["#test\n","new_review = input('Enter a new review: ')\n","new_review_vector = vectorizer.transform([new_review])\n","prediction = nb_model.predict(new_review_vector)\n","print('Prediction:', prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kU1Xw7UEoJnQ","executionInfo":{"status":"ok","timestamp":1722514063230,"user_tz":-330,"elapsed":17739,"user":{"displayName":"Soan Diaz","userId":"14385863594581312452"}},"outputId":"8e527eb8-70b1-485b-a8e3-12d4c1af75af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a new review: Movie was really awesome.\n","Prediction: ['positive']\n"]}]}]}